{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","store/PeopleContext.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","people","isLoading","hasError","PeopleProvide","children","useState","setPeople","setIsLoading","setHasError","useEffect","fetchData","loadedPeople","state","Provider","value","PersonLink","person","name","slug","sex","PersonInfo","useContext","useParams","findPersoninList","parentName","find","per","mother","motherName","father","fatherName","born","died","tableDescription","PeopleTable","map","option","PeoplePage","length","PageNotFound","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"sQAGMA,EAAe,SAAC,GAAD,IACjBC,EADiB,EACjBA,SADiB,OAEhBC,IAAG,cAAe,CAAE,8BAA+BD,GAFnC,EAIRE,EAAS,WACpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWJ,EACXM,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWJ,EACXM,GAAG,UAFL,0BAUT,EC9BYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECJNI,EAAW,WACtB,OACE,oBAAIJ,UAAU,QAAd,sBAEH,E,gBCFYK,G,MAAS,kBACpB,qBAAKL,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,G,qBCOf,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCVM,IAAMQ,EAAgBC,IAAMC,cAI/B,CACAC,OAAQ,GACRC,WAAW,EACXC,SAAU,KAODC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOJ,EAAP,KAAkBM,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOH,EAAP,KAAiBM,EAAjB,KAEAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,qGAChBH,GAAa,GADG,kBAIanB,IAJb,OAIRuB,EAJQ,OAMdL,EAAUK,GANI,gDAQdH,EAAY,wBARE,yBAUdD,GAAa,GAVC,4EAAH,qDAcfG,GACD,GAAE,IAEH,IAAME,EAAQ,CACZZ,SACAC,YACAC,YAGF,OACE,cAACL,EAAcgB,SAAf,CAAwBC,MAAOF,EAA/B,SACGR,GAGN,EC3CYW,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAEpB,OACE,cAAC,IAAD,CACEnC,GAAE,aAAQkC,GACVpC,UAAWF,IAAG,CACZ,kBAA2B,MAARuC,IAHvB,SAMGF,GAGN,ECXYG,EAA8B,SAAC,GAAgB,IAAdJ,EAAa,EAAbA,OACpChB,EAAWqB,qBAAWxB,GAAtBG,OACAkB,EAASI,cAATJ,KAEFK,EAAmB,SAACC,GACxB,OAAOxB,EAAOyB,MAAK,SAAAC,GAAG,OAAIA,EAAIT,OAASO,CAAjB,KAAgC,IACvD,EAEKG,EAASJ,EAAiBP,EAAOY,YACjCC,EAASN,EAAiBP,EAAOc,YAEvC,OACE,qBACE,UAAQ,SACRhD,UAAWF,IAAG,CAAE,yBAA0BsC,IAASF,EAAOE,OAF5D,UAIE,6BACE,cAAC,EAAD,CAAYF,OAAQA,MAGtB,6BAAKA,EAAOG,MACZ,6BAAKH,EAAOe,OACZ,6BAAKf,EAAOgB,OACZ,6BACGL,EACC,cAAC,EAAD,CAAYX,OAAQW,IAEpBX,EAAOY,YAAc,MAGzB,6BACGC,EACC,cAAC,EAAD,CAAYb,OAAQa,IAEpBb,EAAOc,YAAc,QAK9B,EC9CKG,EAAmB,CACvB,OACA,MACA,OACA,OACA,SACA,UAGWC,EAAc,WACzB,IAAQlC,EAAWqB,qBAAWxB,GAAtBG,OAER,OACE,wBACE,UAAQ,cACRlB,UAAU,uDAFZ,UAIE,gCACE,6BACGmD,EAAiBE,KAAI,SAAAC,GAAM,OAC1B,6BAAkBA,GAATA,EADiB,QAMhC,gCACGpC,EAAOmC,KAAI,SAAAnB,GAAM,OAChB,cAAC,EAAD,CAA8BA,OAAQA,GAArBA,EAAOE,KADR,QAMzB,EC/BYmB,EAAa,WACxB,MAAwChB,qBAAWxB,GAA3CI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUF,EAA7B,EAA6BA,OAE7B,OACE,qCACE,oBAAIlB,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGoB,GACC,mBAAG,UAAQ,qBAAqBpB,UAAU,kBAA1C,SACGoB,IAIJD,GAAc,cAAC,EAAD,KAEbD,EAAOsC,QACP,mBAAG,UAAQ,kBAAX,gDAKApC,IAAaD,KAAeD,EAAOsC,QACnC,cAAC,EAAD,WAMX,ECnCYC,EAAe,WAC1B,OACE,oBAAIzD,UAAU,QAAd,2BAEH,ECQY0D,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU1D,GAAG,IAAI4D,SAAO,MAErD,cAAC,IAAD,CAAOH,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,SAASC,QAAS,cAAC,EAAD,QAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cAZf,ECLpBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,EAAD,I","file":"static/js/main.75d3595f.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', { 'has-background-grey-lighter': isActive });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeopleContext = React.createContext<({\n  people: Person[],\n  isLoading: boolean,\n  hasError: string,\n})>({\n    people: [],\n    isLoading: false,\n    hasError: '',\n  });\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvide: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n      } catch (error) {\n        setHasError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const state = {\n    people,\n    isLoading,\n    hasError,\n  };\n\n  return (\n    <PeopleContext.Provider value={state}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { PeopleContext } from '../../store/PeopleContext';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const { people } = useContext(PeopleContext);\n  const { slug } = useParams();\n\n  const findPersoninList = (parentName: string | null) => {\n    return people.find(per => per.name === parentName) || null;\n  };\n\n  const mother = findPersoninList(person.motherName);\n  const father = findPersoninList(person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === person.slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../../store/PeopleContext';\nimport { PersonInfo } from '../PersonInfo';\n\nconst tableDescription = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\nexport const PeopleTable = () => {\n  const { people } = useContext(PeopleContext);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableDescription.map(option => (\n            <th key={option}>{option}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { PeopleContext } from '../store/PeopleContext';\n\nexport const PeoplePage = () => {\n  const { isLoading, hasError, people } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {hasError}\n            </p>\n          )}\n\n          {isLoading && (<Loader />)}\n\n          {!people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!hasError && !isLoading && !!people.length && (\n            <PeopleTable />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { PeopleProvide } from './store/PeopleContext';\n\nexport const Root = () => (\n  <Router>\n    <PeopleProvide>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </PeopleProvide>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}